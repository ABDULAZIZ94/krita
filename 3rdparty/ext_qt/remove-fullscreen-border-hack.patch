diff --git a/src/plugins/platforms/windows/qwindowswindow.cpp b/src/plugins/platforms/windows/qwindowswindow.cpp
index 967d479a0..c888847ed 100644
--- a/src/plugins/platforms/windows/qwindowswindow.cpp
+++ b/src/plugins/platforms/windows/qwindowswindow.cpp
@@ -1561,7 +1561,7 @@ void QWindowsWindow::show_sys() const
                 restoreMaximize = true;
         } else {
             updateTransientParent();
-            if (state & Qt::WindowMaximized) {
+            if (state & Qt::WindowMaximized && !(state & Qt::WindowFullScreen)) {
                 sm = SW_SHOWMAXIMIZED;
                 // Windows will not behave correctly when we try to maximize a window which does not
                 // have minimize nor maximize buttons in the window frame. Windows would then ignore
@@ -1998,7 +1998,7 @@ bool QWindowsWindow::isFullScreen_sys() const
         return false;
     QRect geometry = geometry_sys();
     if (testFlag(HasBorderInFullScreen))
-        geometry += QMargins(1, 1, 1, 1);
+        geometry += QMargins(0, 0, 0, 1);
     QPlatformScreen *screen = screenForGeometry(geometry);
     return screen && geometry == screen->geometry();
 }
@@ -2069,7 +2069,11 @@ void QWindowsWindow::setWindowState_sys(Qt::WindowStates newState)
                 const UINT swpf = SWP_FRAMECHANGED | SWP_NOACTIVATE;
                 const bool wasSync = testFlag(SynchronousGeometryChangeEvent);
                 setFlag(SynchronousGeometryChangeEvent);
-                SetWindowPos(m_data.hwnd, HWND_TOP, r.left(), r.top(), r.width(), r.height(), swpf);
+                if (testFlag(HasBorderInFullScreen)) {
+                    SetWindowPos(m_data.hwnd, HWND_TOP, r.left() - 1, r.top() - 1, r.width() + 2, r.height() + 1, swpf);
+                } else {
+                    SetWindowPos(m_data.hwnd, HWND_TOP, r.left(), r.top(), r.width(), r.height(), swpf);
+                }
                 if (!wasSync)
                     clearFlag(SynchronousGeometryChangeEvent);
                 clearFlag(MaximizeToFullScreen);
